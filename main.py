import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.utils.keyboard import InlineKeyboardBuilder

API_TOKEN = "YOUR_BOT_TOKEN"
HIDDEN_CHANNEL_ID = -1002570163026  # ID –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É
bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

logging.basicConfig(level=logging.INFO)

class EditState(StatesGroup):
    waiting_for_new_text = State()

pending_messages = {}

INSTRUCTION_TEXT = (
    "üìã <b>–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±–æ—Ç–∞:</b>\n\n"
    "üîπ <b>–ö—É–¥–∏ –ø–æ—Ç—Ä–∞–ø–ª—è—î –Ω–æ–≤–∏–Ω–∞:</b> –í–∞—à—ñ –Ω–æ–≤–∏–Ω–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω—ñ —É –∫–∞–Ω–∞–ª—ñ ChatGPT Ukraine.\n"
    "1Ô∏è‚É£ –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤—ñ–¥–µ–æ –∞–±–æ –¥–æ–∫—É–º–µ–Ω—Ç, —â–æ–± –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ —Å–≤–æ—é –Ω–æ–≤–∏–Ω—É.\n"
    "2Ô∏è‚É£ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–æ–∑–≥–ª—è–Ω–µ –≤–∞—à—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é —Ç–∞ –≤–∏—Ä—ñ—à–∏—Ç—å, —á–∏ –ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ —ó—ó.\n"
    "3Ô∏è‚É£ –Ø–∫—â–æ –Ω–æ–≤–∏–Ω–∞ –∑–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞, –≤–æ–Ω–∞ –±—É–¥–µ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–∞ —É –∫–∞–Ω–∞–ª—ñ.\n\n"
    "üìå <b>–ü—Ä–∞–≤–∏–ª–∞:</b>\n"
    "- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –æ–±—Å—è–≥ –Ω–æ–≤–∏–Ω–∏ ‚Äî 1000 –∑–Ω–∞–∫—ñ–≤. –Ø–∫—â–æ —Ç–µ–∫—Å—Ç –¥–æ–≤—à–∏–π, –≤—ñ–Ω –±—É–¥–µ —Ä–æ–∑–º—ñ—â–µ–Ω–∏–π —É –∫—ñ–ª—å–∫–æ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö.\n"
    "- –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è (–∂–∏—Ä–Ω–∏–π, –∫—É—Ä—Å–∏–≤) —Ç–∞ –∞–Ω–∫–æ—Ä–∏ –Ω–µ –∑–±–µ—Ä–µ–∂—É—Ç—å—Å—è.\n"
    "- –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞–¥—Å–∏–ª–∞–π—Ç–µ —É –≤–∏–≥–ª—è–¥—ñ —Ç–µ–∫—Å—Ç—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, https://example.com).\n\n"
    "üîí <b>–í–∞—à–µ —ñ–º'—è –±—É–¥–µ –∞–Ω–æ–Ω—ñ–º–Ω–∏–º.</b> –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ, —â–æ–± –≤–∞—Å –∑–≥–∞–¥–∞–ª–∏, –¥–æ–¥–∞–π—Ç–µ —Å–≤–æ—î —ñ–º'—è —É —Ç–µ–∫—Å—Ç—ñ.\n\n"
    "üõ† <b>–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n"
    "/start - –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è\n"
    "/help - –û–ø–∏—Å —Å–∏—Å—Ç–µ–º–∏ —Ç—Ä–∏–≥–µ—Ä—ñ–≤\n"
)

@dp.message(commands=['start'])
async def start(message: types.Message):
    await message.answer(
        "üëã <b>–í—ñ—Ç–∞—î–º–æ —É –±–æ—Ç—ñ ChatGPT Ukraine!</b>\n\n" + INSTRUCTION_TEXT,
        parse_mode="HTML",
        reply_markup=get_edit_keyboard()
    )

@dp.message(commands=['help'])
async def help_command(message: types.Message):
    await message.answer(
        "üõ† <b>–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–æ—Ç–æ–º:</b>\n\n" + INSTRUCTION_TEXT,
        parse_mode="HTML"
    )

def get_edit_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É", callback_data="edit")
    return builder.as_markup()

@dp.callback_query(lambda c: c.data == 'edit')
async def edit_news(callback: types.CallbackQuery):
    await callback.message.answer("‚úçÔ∏è –í–≤–µ–¥–∏ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–æ–≤–∏–Ω–∏:")
    await dp.storage.set_state(callback.from_user.id, EditState.waiting_for_new_text)

@dp.message(EditState.waiting_for_new_text)
async def save_edited_news(message: types.Message, state):
    pending_messages[message.chat.id] = message.text
    await message.answer("‚úÖ –ù–æ–≤–∏–Ω—É –≤—ñ–¥—Ä–µ–¥–∞–≥–æ–≤–∞–Ω–æ!")
    await state.clear()

async def on_startup():
    await bot.delete_webhook(drop_pending_updates=True)
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")

async def on_shutdown():
    await bot.session.close()
    logging.info("üõë –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ.")

if __name__ == "__main__":
    try:
        asyncio.run(dp.start_polling(bot, on_startup=on_startup, on_shutdown=on_shutdown))
    except (KeyboardInterrupt, SystemExit):
        logging.error("‚ùå –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É.")
